{"version":3,"sources":["Hoc.js","Portal/Portal.js","Portal/ParentPortal.js","Context/Context.js","Context/Child.js","Context/Parent.js","Sider.js","App.js","Dolist/Todoinput.js","Dolist/Todoing.js","Dolist/Todolist.js","index.js"],"names":["url","hoc","Com","title","Fetch","state","data","fetch","method","then","res","json","console","log","setState","result","this","Component","displayName","name","getDisplayName","Music","props","map","item","Music2","Mymusic","Mymusic2","Hoc","Portal","handleClick","ReactDOM","createPortal","onClick","document","body","con2","React","createContext","Child","context","contextType","Parent","time","Date","toLocaleString","timeId","setInterval","clearInterval","Sider","style","float","to","Todoinput","handleInput","e","keyCode","add","target","value","inputValue","ref","inp","onKeyDown","type","Todoing","todo","a","idx","done","key","onChange","ju","del","b","checked","Todolist","addItem","data1","delItem","splice","judge","JSON","parse","localStorage","getItem","setItem","stringify","num1","num2","render","getElementById"],"mappings":"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","file":"static/js/main.68d6889a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nlet url = 'https://api.apiopen.top/musicRankingsDetails?type=1';\r\nfunction getDisplayName(Com){\r\n    return Com.displayName || Com.name || 'Component';\r\n}\r\nfunction hoc(Com,url,title){\r\n    class Fetch extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        componentDidMount() {\r\n            fetch(url,{method:'post'})\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    console.log(res);\r\n                    this.setState({\r\n                        data: res.result\r\n                    })\r\n                })\r\n        }\r\n        render(){\r\n            return <Com data={this.state.data}/>\r\n        }\r\n    }\r\n    // Fetch.displayName = 'Fetch('+Com.name+')';\r\n    Fetch.displayName = `Fetch(${getDisplayName(Com)})`;\r\n\r\n    return Fetch;\r\n}\r\nclass Music extends Component{\r\n    render(){\r\n        return (\r\n            <ul>\r\n                {\r\n                    this.props.data.map(\r\n                        (item)=><li>{item.title}</li>\r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nclass Music2 extends Component{\r\n    render(){\r\n        return (\r\n            <ul>\r\n                {\r\n                    this.props.data.map(\r\n                        (item)=><p>{item.title}</p>\r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nlet Mymusic = hoc(Music,url);\r\nlet Mymusic2 = hoc(Music2,url);\r\nexport default class Hoc extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Mymusic/> \r\n               <Mymusic2/> \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default class Portal extends Component {\r\n    handleClick = ()=>{\r\n        console.log('portalClick');\r\n    }\r\n    render() {\r\n        return (\r\n            ReactDOM.createPortal(\r\n                <div>\r\n                    <h1 onClick={this.handleClick}>Portal</h1>\r\n                </div>,\r\n                document.body\r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Portal from './Portal'\r\n\r\nexport default class ParentPortal extends Component {\r\n    handleClick = ()=>{\r\n        console.log('ParentportalClick');\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick}>\r\n                <Portal/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nexport let con = React.createContext();\r\nexport let con2 = React.createContext();\r\n\r\n//export let {Provider,Consumer} = React.createContext();","import React, { Component } from 'react'\r\nimport {con2} from './Context'\r\n\r\nexport default class Child extends Component {\r\n    render() {\r\n        // console.log(this.context)\r\n        return (\r\n            <div>\r\n                Child组件\r\n                <div>{this.context}</div>\r\n                {/* <con.Consumer>\r\n                    {\r\n                        (id)=><div>{id}</div>\r\n                    }\r\n                </con.Consumer> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChild.contextType = con2;","import React, { Component } from 'react'\r\nimport Child from './Child';\r\n\r\nexport default class Parent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            time:new Date().toLocaleString()\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.timeId = setInterval(()=>{\r\n            this.setState({\r\n                time:new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.time}</h1>\r\n                Parent组件\r\n                <Child /> \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Sider extends Component {\r\n    render() {\r\n        let style = {float:'left'};\r\n        return (\r\n            <ul style={style}> \r\n                <li>\r\n                    <Link to='/hoc'>HOC</Link>\r\n                    <Link to='/parent'>Parent</Link>\r\n\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router,Route,Link} from 'react-router-dom'\r\nimport Hoc from './Hoc'\r\nimport Parent from './Context/Parent'\r\nimport Sider from './Sider'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    {/* <Link to='/hoc'>HOC</Link>\r\n                    <Link to='/parent'>Parent</Link> */}\r\n                    <Sider />\r\n                    <div style={{float:'left',border:'2px solid red',marginLeft:100}}>\r\n                        <Route path='/hoc' component={Hoc} />\r\n                        <Route path=\"/parent\" component={Parent}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// 受控组件：value值被react控制的表单元素\r\n// 可以实时获取表单元素的值（表单验证）/写法相对麻烦\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        // this.handleInput = this.handleInput.bind(this);\r\n        this.state = {\r\n            inputValue : ''\r\n        }\r\n\r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode == 13){ //按下回车\r\n            this.props.add(e.target.value);\r\n        }  \r\n        // console.log(inputValue);\r\n    }\r\n    // handleChange = (e)=>{\r\n    //     this.setState({\r\n    //         inputValue: e.target.value\r\n    //     })\r\n    //     console.log(inputValue);\r\n    //     console.log(e.target.value);\r\n    // }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* onChange={this.handleChange} */}\r\n                <input ref={(inp)=>{this.inp=inp}} onKeyDown={this.handleInput} type=\"text\"/>\r\n                {/* <button style={ {color:'red',fontSize:'15px'} } onClick={()=>{console.log()}}>提交</button> */}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Todoing extends Component {\r\n    // delItem(idx,e){\r\n    //     this.props.del(idx);\r\n    //     // console.log(this.props);\r\n    // }\r\n    render() {\r\n        var {todo} = this.props;\r\n        return (\r\n            <div>\r\n                <span>正在运行</span>\r\n                <sapn>({this.props.a})</sapn>\r\n                <ul>\r\n                    {\r\n                        todo.map((item,idx)=>{\r\n                            if(item.done == false)\r\n                            return (\r\n                                <li key={idx}>\r\n                                    <input type='checkbox' onChange={(e)=>this.props.ju(idx)}/>{item.title}---<button onClick={(e)=>this.props.del(idx,e)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <span>已完成</span>\r\n                <sapn>({this.props.b})</sapn>\r\n                <ul>\r\n                    {\r\n                        todo.map((item,idx)=>{\r\n                            if(item.done == true)\r\n                            return (\r\n                                <li key={idx}>\r\n                                    <input type='checkbox' onChange={(e)=>this.props.ju(idx)} checked/>{item.title}---<button onClick={(e)=>this.props.del(idx,e)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            // <div style={{width:40,height:40,border:'2px solid red'}} onClick={console.log(todo)}></div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        let todo=JSON.parse(localStorage.getItem('todo'));\r\n        console.log(localStorage.getItem('todo'));\r\n        if(todo==null){\r\n            this.state = {\r\n                 // todo:[{\"title\":12,\"done\":false}]\r\n                todo:[]\r\n            }\r\n        }\r\n        else{\r\n            this.state = {\r\n                todo:todo\r\n            }\r\n        }\r\n    }\r\n    addItem=(data)=>{\r\n        var data1 = {\"title\":data,\"done\":false};\r\n        this.setState({//改变状态\r\n            todo:[...this.state.todo,data1]  //在数组的最后添加data\r\n        })\r\n        console.log(this.state.todo);\r\n    }\r\n    delItem = (idx,e)=>{\r\n        let todo = [...this.state.todo]; //拷贝\r\n        todo.splice(idx,1);\r\n        this.setState({\r\n            todo:todo\r\n        })\r\n        console.log(this.state.todo);\r\n    }\r\n    judge= (idx)=>{\r\n        let todo = this.state.todo;\r\n        if(todo[idx].done == true){\r\n            todo[idx].done = false;\r\n        }\r\n        else{\r\n            todo[idx].done = true;\r\n        }\r\n        \r\n        this.setState({\r\n            todo:todo\r\n        })\r\n        console.log(this.state.todo[idx].done);\r\n    }\r\n    render() {\r\n        localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n        var num1 = 0;\r\n        var num2 = 0;\r\n        this.state.todo.map((item)=>{\r\n            if(item.done==false){\r\n                num1 += 1;\r\n            }else{\r\n                num2 += 1;\r\n            }\r\n        })\r\n        // console.log(num1);\r\n        // console.log(num2);\r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem} ju={this.judge}/>\r\n                <Todoing todo={this.state.todo} del={this.delItem} ju={this.judge} a={num1} b={num2}/>\r\n                {/* del={this.delItem} */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Fragment,Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Hoc from './Hoc'\nimport ParentPortal from './Portal/ParentPortal'\nimport App from './App'\n// import Todolist from './Todolist/Todolist';\n// import Request from './Request';\n// import Parent from './Context/Parent'\n// import {con,con2} from './Context/Context'\nimport Dolist from './Dolist/Todolist';\n\n\n// let id = 1234;\n// ReactDOM.render(\n//     <con.Provider value={id}>\n//         <div>ddd</div>\n//         <con2.Provider value='aaaa'>\n//             <Parent />\n//         </con2.Provider>  \n//     </con.Provider>,\n//     document.getElementById('root')\n// )\n\nReactDOM.render(\n    <Dolist/>,\n    document.getElementById('root')\n)\n\n// import ShowTime from './ShowTime';\n\n// 显示当前系统时间\n// function showTime(){\n//     var ele = <div>\n//         <p>当前时间是：</p>\n//         <div>{new Date().toLocaleString()}</div>\n//     </div>;\n//     ReactDOM.render(ele,document.querySelector('#root'));\n// }\n// showTime();\n// setInterval(showTime,1000);\n\n// function ShowTime(props){\n//     console.log(props);\n//     return (<Fragment>\n//         <div>{props.name}</div>\n//         <div>{new Date().toLocaleString()}</div>\n//         </Fragment>)\n// }\n// var num = 100;\n// ReactDOM.render(\n//     <ShowTime age={num} name=\"zhangsan\"/>,\n//     document.getElementById('root')\n// )\n\n// var num = 100;\n// 默认导出：只能导出一次，被引入时可以重命名\n// export default ShowTime;\n// 明明导出：可以导出多个，被引入是与导出的名一致\n// export {ShowTime};\n// export const num = 100;\n\n// 组件交互\n// 父组件---->子组件：调用组件时添加属性，子组件通过props拿到传递的数据\n// 子组件---->父组件：\n\n// var num = [1,2,3];\n// ReactDOM.render(\n//     <ShowTime age={num} name=\"zhangsan\"/>,\n//     document.getElementById('root')\n// )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// var str = 'react';\n// babel编译\n//自己封装的render函数\n// var ele = <h1>hello {str}</h1>;\n// var obj = {\n//     type:\"div\",\n//     props:{\n//         id :'tit',\n//         class : 'tit',\n//         children : ['hello','react',{\n//             type:\"h1\",\n//             props:{\n//                 id :'tit',\n//                 class : 'tit',\n//                 children : ['hello','react']\n//             }\n//         }]\n//     }\n// }\n// function render(obj,container){\n//     var {type,props} = obj;\n    //文档碎片\n//     var fragment = document.createDocumentFragment();\n\n//     var ele = document.createElement(type);\n//     for(var item in props){\n//         if(item === 'class'){\n//             ele.className = props[item];\n//         }else if(item === 'children'){\n\n//             for(var i = 0;i<props.children.length;i++){\n//                 if(typeof props.children[i] === 'object'){\n//                     render(props.children[i],ele);\n//                 }else{\n//                     // ele.innerHTML += props.children[i];\n//                     var txt = document.createTextNode(props.children[i]);\n//                     ele.appendChild(txt);\n//                 }\n                \n//             }\n//         }else{\n//             ele[item] = props[item];\n//         }\n//     }\n//     fragment.appendChild(ele);\n//     container.appendChild(fragment);\n// }\n// render(obj,document.getElementById('root'));\n\n// var ele = React.createElement(\n//     'h1',\n//     {id:'tit',class:'title'},\n//     'hello',\n//     React.createElement(\n//         'h1',\n//         {id:'tit',class:'title'},\n//         'hello')\n// );\n// ReactDOM.render(ele, document.getElementById('root'));\n\n// 页面渲染过程\n// 请求HTML页面、浏览器html解析器解析html文件、生成dom树\n// link引入css文件，css解析器解析css，生成css对象模型，cssom和dom树结合生成一个render树（渲染树）\n// 最后浏览器绘制页面\n\n\n\n// 页面回流（重排reflow）：DOW结构变化、内容变化、大小、位置的变化\n//页面重绘（repaint）：颜色的变化（背景色，字体颜色，边框颜色）\n//1.原始慢的\n// console.time('time');\n// for(var i = 0;i<100;i++){\n//     document.getElementById('root').innerHTML += '<p>'+i+'</p>';\n// }\n// console.timeEnd('time');\n// 变快了：先用变量进行dom处理，最后一次渲染\n// var div = document.getElementById('root');\n// var str = '';\n// for(var i = 0;i<1000;i++){\n//     str += '<p>'+i+'</p>';\n// }\n// div.innerHTML = str;\n\n// 2.对样式处理\n// var div = document.getElementById('root');\n// div.style.width = '1000px';\n// div.style.height = '1000px';\n// div.style.background = 'red';\n// 改变，声明一个css类\n// 例如\n// var div = document.getElementById('root');\n// .active{\n//     width = '100px';\n//     height = '100px';\n//     background = 'red';\n// }\n// div.className = 'active';\n\n// 3.offsetLeft 距离浏览器左侧的像素 会引起回流，要慎用\n// console.log(div.offsetLeft);\n// setInterval(()=>{\n//     div.style.width = div.offsetWidth + 1 +'px';\n// },100)\n\n// var wid = div.offsetWidth;\n// setInterval(()=>{\n//     wid += 1;\n//     div.style.width = wid +'px';\n// },100)\n\n// 4.文档碎片(内存中的一个变量)\n\n\n\n"],"sourceRoot":""}